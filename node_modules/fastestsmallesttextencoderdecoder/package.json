{
  "_args": [
    [
      {
        "raw": "fastestsmallesttextencoderdecoder@^1.0.22",
        "scope": null,
        "escapedName": "fastestsmallesttextencoderdecoder",
        "name": "fastestsmallesttextencoderdecoder",
        "rawSpec": "^1.0.22",
        "spec": ">=1.0.22 <2.0.0",
        "type": "range"
      },
      "/Users/twei/git_workspace/BSC/node_modules/@textile/security"
    ]
  ],
  "_from": "fastestsmallesttextencoderdecoder@>=1.0.22 <2.0.0",
  "_hasShrinkwrap": false,
  "_id": "fastestsmallesttextencoderdecoder@1.0.22",
  "_inCache": true,
  "_location": "/fastestsmallesttextencoderdecoder",
  "_nodeVersion": "12.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/fastestsmallesttextencoderdecoder_1.0.22_1591707634062_0.6224337225478969"
  },
  "_npmUser": {
    "name": "anonyco",
    "email": "wowzeryest@gmail.com"
  },
  "_npmVersion": "6.14.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fastestsmallesttextencoderdecoder@^1.0.22",
    "scope": null,
    "escapedName": "fastestsmallesttextencoderdecoder",
    "name": "fastestsmallesttextencoderdecoder",
    "rawSpec": "^1.0.22",
    "spec": ">=1.0.22 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@textile/crypto",
    "/@textile/security",
    "/@textile/threads-client"
  ],
  "_resolved": "https://registry.npmjs.org/fastestsmallesttextencoderdecoder/-/fastestsmallesttextencoderdecoder-1.0.22.tgz",
  "_shasum": "59b47e7b965f45258629cc6c127bf783281c5e93",
  "_shrinkwrap": null,
  "_spec": "fastestsmallesttextencoderdecoder@^1.0.22",
  "_where": "/Users/twei/git_workspace/BSC/node_modules/@textile/security",
  "author": {
    "name": "Jack Giffin",
    "email": "wowzeryest@gmail.com",
    "url": "https://jackgiffin.com/"
  },
  "browser": "EncoderDecoderTogether.min.js",
  "bugs": {
    "url": "https://github.com/anonyco/FastestSmallestTextEncoderDecoder/issues",
    "email": "wowzeryest@gmail.com"
  },
  "dependencies": {},
  "description": "The fastest smallest Javascript polyfill for the encode of TextEncoder and decode of TextDecoder for UTF-8 only. Made by AnonyCo with ❤️ from 🐕s.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-Pb8d48e+oIuY4MaM64Cd7OW1gt4nxCHs7/ddPPZ/Ic3sg8yVGM7O9wDvZ7us6ScaUupzM+pfBolwtYhN1IxBIw==",
    "shasum": "59b47e7b965f45258629cc6c127bf783281c5e93",
    "tarball": "https://registry.npmjs.org/fastestsmallesttextencoderdecoder/-/fastestsmallesttextencoderdecoder-1.0.22.tgz",
    "fileCount": 6,
    "unpackedSize": 43422,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe34fyCRA9TVsSAnZWagAADwwP/1BLfWHvrrg3G4sAa6HX\ns92ruA9j++KI3CBCbd3unKpZulIUvPDOyr0gm4COKqobH7SY8CLROrU9BlSg\nD2hdASzF0KpMLEEcPaUNfPBigRW43axkwmD1JGCTpHJCkWW8t2czZZleaWMv\nmf7jSEd3s7jcOvgVFmZA68euAlusWLfxdsLtgLNiX2FOnZxaP5mgGYDKP5dB\n6/Og73hrO1MCrvz2W2Q2SZMupQr8zLSD+CpgUZUfcKe2jQ57qPEHqJzjZIQy\n+cXvXMHvyhLvW1BwpyEuInBH/FF3ODPMv+so4o1DM6vQCSjH3vZXMF34N3T1\nAfkq+ywW3y71kyTHbluMsXcLC9l7NiJNRm551KpgdkxwcmKreYr4iF70YY9K\nU+Xq46xAMIACQmCdSu8E2+2/AcTHCfpw3wbgnr6mG5Tl8UJTo+0uf9GWFUmn\npff+S9bC4tApAWwmGU0SPX5Rr5Lkz2+a4PmBF1JykkI1trALJEmy3I+2W5jB\nTZAih0MruB4wPbOwwerXl+BV4KA3voL+KQvtBIkedY31aJ6XLSuEbftK3meS\nQLsLak5AvASx9tBOvmuPp+aFkNTxFtsksV5EvBnftiPyvUw0j9xJC5nJviCD\nnXkRYn3u7Iwf6W6ZjBPNRXTZjqlKsO+ESqkYvjoyKRmpb3jdzY/ogg2thP4I\nSLwV\r\n=kf6C\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "es2015": "NodeJS/EncoderAndDecoderNodeJS.min.mjs",
  "gitHead": "1d75dcef4535610b057d9f94b64a9f5a349ad34d",
  "homepage": "https://github.com/anonyco/FastestSmallestTextEncoderDecoder#quick-start",
  "keywords": [
    "utf-8",
    "encoding",
    "decoding",
    "encoder",
    "decoder",
    "javascript",
    "polyfill",
    "js",
    "utf8",
    "compact",
    "cross-browser",
    "utf8-string",
    "pure-javascript",
    "nodejs",
    "node-js",
    "node-module",
    "nodejs-modules",
    "performance",
    "tiny",
    "small"
  ],
  "license": "CC0-1.0",
  "main": "NodeJS/EncoderAndDecoderNodeJS.min.js",
  "maintainers": [
    {
      "name": "anonyco",
      "email": "wowzeryest@gmail.com"
    }
  ],
  "module": "NodeJS/EncoderAndDecoderNodeJS.min.mjs",
  "name": "fastestsmallesttextencoderdecoder",
  "optionalDependencies": {},
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git://github.com/anonyco/FastestSmallestTextEncoderDecoder.git"
  },
  "scripts": {
    "benchmark": "cd test; node --preserve-symlinks --preserve-symlinks-main --expose-gc --max-old-space-size=10240 --max-semi-space-size=8192 --noconcurrent_sweeping --nouse-idle-notification -- 'benchmark.js'",
    "build": "if [ ! -s 'closure-compiler.jar' ]; then npm run install-dev; fi; npm run build-browser & npm run build-gzip; npm run build-encodeinto & true; npm run build-require & true; npm run build-module & true; wait",
    "build-browser": "java -server -Xmx1024M -jar './closure-compiler.jar' --D ENCODEINTO_BUILD=false --js './EncoderDecoderTogether.src.js' --js_output_file 'EncoderDecoderTogether.min.js' --create_source_map 'EncoderDecoderTogether.min.js.map' --language_out ECMASCRIPT_2017 --compilation_level ADVANCED_OPTIMIZATIONS --output_wrapper '%output%//AnonyCo\n//# sourceMappingURL=https://cdn.jsdelivr.net/gh/AnonyCo/FastestSmallestTextEncoderDecoder/EncoderDecoderTogether.min.js.map' & true; java -server -Xmx1024M -jar './closure-compiler.jar' --D ENCODEINTO_BUILD=false --js './individual/FastestTextEncoderPolyfill.src.js' --js_output_file 'individual/FastestTextEncoderPolyfill.min.js' --language_out ECMASCRIPT_2017 --compilation_level ADVANCED_OPTIMIZATIONS --output_wrapper '%output%//AnonyCo'; wait; sed -i -e 's/\"undefined\"/\"\"+void 0/g' './EncoderDecoderTogether.min.js' & true; if [ \"${PWD##*/}\" != 'encodeInto' ]; then java -server -Xmx1024M -jar './closure-compiler.jar' --js './individual/FastestTextDecoderPolyfill.src.js' --js_output_file 'individual/FastestTextDecoderPolyfill.min.js' --language_out ECMASCRIPT_2017 --compilation_level ADVANCED_OPTIMIZATIONS --output_wrapper '%output%//AnonyCo'; fi; wait",
    "build-encodeinto": "if [ \"${PWD##*/}\" != 'encodeInto' ]; then mkdir -p encodeInto; cd encodeInto; mkdir -p test individual NodeJS; echo 'Please see [fastestsmallesttextencoderdecoder](fastestsmallesttextencoderdecoder) for usage and details' > README.md; ln -fsT ../LICENSE LICENSE; ln -fsT '../closure-compiler.jar' 'closure-compiler.jar'; ln -fsT ../zopfli zopfli; sed -e 's@\"fastestsmallesttextencoderdecoder\"@\"fastestsmallesttextencoderdecoder-encodeinto\"@; s@E[N]CODEINTO_BUILD=false@ENCODEINTO_BUILD=true@g; s@gh/AnonyCo/[F]astestSmallestTextEncoderDecoder@gh/AnonyCo/FastestSmallestTextEncoderDecoder/encodeInto@g; s@[.]/EncoderDecoderTogether@..\\/EncoderDecoderTogether@g; s@[.]/NodeJS/@..\\/NodeJS/@g; s@[.]/individual/FastestTextEncoderPolyfill@..\\/individual/FastestTextEncoderPolyfill@g' > package.json < '../package.json'; cd test; for f in *; do if [ ! -e \"../../test/$f\" ]; then unlink \"$f\" 2> /dev/null; fi; done; for i in $(dir -Ab1L ../../test); do ln -fsT \"../../test/$i\" \"./$i\"; done; cd ..; npm run build; cd ..; printf '#!/bin/sh\nnpm install fastestsmallesttextencoderdecoder-encodeinto\n' > gh-pages/install-FastestSmallestTextEncoderDecoder-encodeInto.sh; printf '@npm install fastestsmallesttextencoderdecoder-encodeinto\r\n' > gh-pages/install-FastestSmallestTextEncoderDecoder-encodeInto.bat; fi; wait",
    "build-es6": "npm run build-module",
    "build-gzip": "./zopfli -i20 EncoderDecoderTogether.min.js; mv EncoderDecoderTogether.min.js.gz test 2> /dev/null",
    "build-module": "java -server -Xmx1024M -jar './closure-compiler.jar' --D ENCODEINTO_BUILD=false --js './NodeJS/EncoderAndDecoderNodeJS.src.module.js' --create_source_map 'NodeJS/EncoderAndDecoderNodeJS.min.mjs.map' --compilation_level ADVANCED_OPTIMIZATIONS --output_wrapper '%output%//AnonyCo\n//# sourceMappingURL=https://cdn.jsdelivr.net/gh/AnonyCo/FastestSmallestTextEncoderDecoder/NodeJS/EncoderAndDecoderNodeJS.min.mjs.map' --language_out ECMASCRIPT_2017 | sed -e 's@window\\.export_default=@export default @g;     s@window\\.export_@export let @g;     s@window\\.exports=\\[@export{@g;    s@window\\.var_gens=\\[@@g;    s@,\"_REMOVE@@g;    s@REMOVE_\",@@g;    s@REMOVE_\"@@g;    s@,\"REM_B_\"\\]@}@g;    s@,\"REM_VAR_\"\\]@@g;    s@\"REM_VAR_\"\\]@@g;    s@REM_VAR_\"\\]@@g' > 'NodeJS/EncoderAndDecoderNodeJS.min.mjs'",
    "build-require": "java -server -Xmx1024M -jar './closure-compiler.jar' --D ENCODEINTO_BUILD=false --js './NodeJS/EncoderAndDecoderNodeJS.src.js' --js_output_file 'NodeJS/EncoderAndDecoderNodeJS.min.js' --create_source_map 'NodeJS/EncoderAndDecoderNodeJS.min.js.map' --compilation_level ADVANCED_OPTIMIZATIONS --output_wrapper '%output%//AnonyCo\n//# sourceMappingURL=https://cdn.jsdelivr.net/gh/AnonyCo/FastestSmallestTextEncoderDecoder/NodeJS/EncoderAndDecoderNodeJS.min.js.map' --language_out ECMASCRIPT_2017",
    "install-dev": "mkdir compiler-latest 2> /dev/null; wget -P ./compiler-latest/ 'https://dl.google.com/closure-compiler/compiler-latest.tar.gz'; unlink ./closure-compiler.jar 2> /dev/null; wget -P ./compiler-latest/ 'https://github.com/google/zopfli/archive/zopfli-1.0.3.tar.gz'; cd compiler-latest; tar xvzf compiler-latest.tar.gz 1> /dev/null; tar xvzf compiler-latest.tar.gz 1> /dev/null; bash -c 'for j in closure-compiler-*; do mv -- \"$j\" \"../closure-compiler.jar\" 1> /dev/null; done' 1> /dev/null 2> /dev/null; tar xvzf zopfli-1.0.3.tar.gz 1> /dev/null; cd zopfli-zopfli-1.0.3; make zopfli 1> /dev/null; mv ./zopfli ../../; cd ../..; rm -rf compiler-latest 2> /dev/null; chmod +X ./zopfli; curl -V 1>/dev/null 2>&1 || (echo 'Curl must be installed in order to upload to NPM. Installing...'; if type apk > /dev/null; then sudo apk add --no-cache curl; elif type apt-get > /dev/null; then sudo apt-get install curl; elif type dnf > /dev/null; then sudo dnf install curl; elif type pacman > /dev/null; then pacman -S curl; elif type zypper > /dev/null; then sudo zypper install curl; fi ); wait",
    "prepublishOnly": "if [ -f './encodeInto/package.json' ]; then cd encodeInto; npm publish; cd ..; fi",
    "test": "if [ \"${PWD##*/}\" != 'encodeInto' ]; then cd encodeInto/test; node --preserve-symlinks --preserve-symlinks-main -- 'test.js' -test-encode-into; cd ../..; fi; cd test; node --preserve-symlinks --preserve-symlinks-main -- 'test.js'"
  },
  "version": "1.0.22"
}
